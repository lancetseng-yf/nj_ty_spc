<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Diecasting Chart</title>
    <style>
      body {
        font-family: sans-serif;
        background-color: #f4f4f4;
        padding: 20px;
      }
      #controls {
        margin-bottom: 20px;
      }
      #controls label {
        font-size: 18px;
        margin-right: 10px;
      }
      #productSelect {
        font-size: 18px;
        padding: 5px 10px;
        min-width: 120px;
      }
      #controls button {
        font-size: 16px;
        padding: 5px 10px;
        margin-left: 5px;
      }
      #chart {
        width: 100%;
        height: 600px;
      }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js"></script>
  </head>
  <body>
    <h1>Diecasting Eigenvalue Chart(1 Shot)</h1>
    <div id="controls">
      <label for="productSelect">Product: </label>
     <select id="productSelect">
  <% ["LL","LR","ML","MR"].forEach(p => { %>
    <option value="<%= p %>" <%= p === type ? "selected" : "" %>>
      <%= p %>
    </option>
  <% }) %>
</select>
      <button id="prevBtn">上一個</button>
      <button id="nextBtn">下一個</button>
    </div>
    <div id="chart"></div>

    <script>
      // --- Backend Data ---
      const models = <%- JSON.stringify(models) %>;
      let currentIndex = models.length > 0 ? models.length - 1 : 0;
      const chart = echarts.init(document.getElementById("chart"));

      // --- Chart Option Builder ---
      function buildChartOption(model) {
        if (!model) return {};
        return {
          title: { text: `${model.type || "N/A"} - ${model.dt}` },
          legend: {
            data: ["Pressure", "Position", "Speed"],
            textStyle: { fontSize: 20 }
          },
          tooltip: {
            trigger: "axis",
            formatter: function (params) {
              let idx = params[0].dataIndex + 1;
              let tooltipText = `Index: ${idx}<br/>`;
              tooltipText += `Biscuit: ${model.sm}<br/>`;
              params.forEach((p) => {
                let displayValue =
                  p.seriesName === "Pressure" || p.seriesName === "Speed"
                    ? p.data / 15
                    : p.data;
                tooltipText += `<span style="display:inline-block;margin-right:5px;border-radius:50%;width:10px;height:10px;background-color:${p.color}"></span>`;
                tooltipText += `${p.seriesName}: ${displayValue}<br/>`;
              });
              return tooltipText;
            },
          },
          toolbox: {
            show: true,
            feature: {
              dataZoom: { yAxisIndex: "none" },
              restore: {},
            },
          },
          dataZoom: [{ type: "inside", start: 0, end: 100 }],
          xAxis: {
            type: "category",
            boundaryGap: false,
            data: model.position.map((_, i) => i + 1),
            axisLabel: {
              fontSize: 20,
              rotate: 30,
            }
          },
          yAxis: {
            type: "value",
            nameTextStyle: { fontSize: 20, rotate: 90 },
            axisLabel: { fontSize: 20 },
            min: 0,
          },
          series: [
            { name: "Pressure", type: "line", data: (model.pressure || []).map(v => v * 15) },
            { name: "Position", type: "line", data: model.position || [] },
            { name: "Speed", type: "line", data: (model.speed || []).map(v => v * 15) },
          ],
        };
      }

      // --- Chart Render ---
      function renderChart() {
        if (models.length === 0) {
          chart.clear();
          chart.setOption({ title: { text: "No Data" } });
          return;
        }
        if (currentIndex >= models.length) currentIndex = models.length - 1;
        if (currentIndex < 0) currentIndex = 0;
        chart.setOption(buildChartOption(models[currentIndex]));
      }

      // --- Product Change: reload page ---
      document.getElementById("productSelect").addEventListener("change", () => {
        const type = document.getElementById("productSelect").value;
        location.href = `/pps/single?type=${type}`;
      });

      // --- Prev/Next navigation ---
      document.getElementById("prevBtn").addEventListener("click", () => {
        currentIndex--;
        renderChart();
      });
      document.getElementById("nextBtn").addEventListener("click", () => {
        currentIndex++;
        renderChart();
      });

      renderChart();
    </script>
  </body>
</html>
