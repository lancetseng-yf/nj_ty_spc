<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>9種圖表 Dashboard</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- Bootstrap -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
    />
    <!-- ECharts -->
    <script src="https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js"></script>
    <style>
      body {
        background: #f4f4f4;
        padding: 20px;
      }
      .chart-box {
        background: #fff;
        border-radius: 8px;
        padding: 10px;
        margin-bottom: 20px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        height: 300px;
      }
      .chart {
        width: 100%;
        height: 100%;
      }
      #countdown {
        font-size: 16px;
        font-weight: bold;
      }
    </style>
  </head>
  <body>
    <div class="container-fluid">
      <h1 class="mb-2">9種不同圖表 Dashboard</h1>
      <div class="mb-3">
        <span id="countdown">距離下一次更新還有 10 秒</span>
      </div>
      <div class="row">
        <% for (let i = 1; i <= 9; i++) { %>
        <div class="col-lg-4 col-md-6 col-sm-12">
          <div class="chart-box">
            <div id="chart<%= i %>" class="chart"></div>
          </div>
        </div>
        <% } %>
      </div>
    </div>

    <script>
      const charts = [];
      function randomData(max = 100) {
        return Math.round(Math.random() * max);
      }

      function initCharts() {
        // 1 折線圖
        charts[0] = echarts.init(document.getElementById("chart1"));
        let lineData = Array.from({ length: 7 }, () => randomData());
        charts[0].setOption({
          title: {
            text: "Line Chart",
            left: "center",
            textStyle: { fontSize: 14 },
          },
          xAxis: { type: "category", data: [1, 2, 3, 4, 5, 6, 7] },
          yAxis: { type: "value" },
          series: [{ type: "line", data: lineData }],
        });
        charts[0].__data = lineData;

        // 2 柱狀圖
        charts[1] = echarts.init(document.getElementById("chart2"));
        let barData = Array.from({ length: 5 }, () => randomData());
        charts[1].setOption({
          title: {
            text: "Bar Chart",
            left: "center",
            textStyle: { fontSize: 14 },
          },
          xAxis: { type: "category", data: ["A", "B", "C", "D", "E"] },
          yAxis: { type: "value" },
          series: [{ type: "bar", data: barData }],
        });

        // 3 圓餅圖
        charts[2] = echarts.init(document.getElementById("chart3"));
        let pieData = [
          { name: "X", value: randomData() },
          { name: "Y", value: randomData() },
          { name: "Z", value: randomData() },
        ];
        charts[2].setOption({
          title: {
            text: "Pie Chart",
            left: "center",
            textStyle: { fontSize: 14 },
          },
          series: [{ type: "pie", radius: "60%", data: pieData }],
        });
        charts[2].__data = pieData;

        // 4 面積圖
        charts[3] = echarts.init(document.getElementById("chart4"));
        let areaData = Array.from({ length: 7 }, () => randomData());
        charts[3].setOption({
          title: {
            text: "Area Chart",
            left: "center",
            textStyle: { fontSize: 14 },
          },
          xAxis: { type: "category", data: [1, 2, 3, 4, 5, 6, 7] },
          yAxis: { type: "value" },
          series: [{ type: "line", areaStyle: {}, data: areaData }],
        });
        charts[3].__data = areaData;

        // 5 散點圖
        charts[4] = echarts.init(document.getElementById("chart5"));
        let scatterData = Array.from({ length: 20 }, () => [
          randomData(),
          randomData(),
        ]);
        charts[4].setOption({
          animation: false,
          title: {
            text: "Scatter Chart",
            left: "center",
            textStyle: { fontSize: 14 },
          },
          xAxis: {},
          yAxis: {},
          series: [{ type: "scatter", data: scatterData }],
        });
        charts[4].__data = scatterData;

        // 6 雷達圖
        charts[5] = echarts.init(document.getElementById("chart6"));
        charts[5].setOption({
          title: {
            text: "Radar Chart",
            left: "center",
            textStyle: { fontSize: 14 },
          },
          radar: {
            indicator: [
              { name: "Metric1", max: 100 },
              { name: "Metric2", max: 100 },
              { name: "Metric3", max: 100 },
              { name: "Metric4", max: 100 },
              { name: "Metric5", max: 100 },
            ],
          },
          series: [
            {
              type: "radar",
              data: [
                {
                  value: Array.from({ length: 5 }, () => randomData()),
                  name: "Score",
                },
              ],
            },
          ],
        });

        // 7 漏斗圖
        charts[6] = echarts.init(document.getElementById("chart7"));
        charts[6].setOption({
          title: {
            text: "Funnel Chart",
            left: "center",
            textStyle: { fontSize: 14 },
          },
          series: [
            {
              type: "funnel",
              data: [
                { value: randomData(), name: "Visit" },
                { value: randomData(), name: "Click" },
                { value: randomData(), name: "Inquiry" },
                { value: randomData(), name: "Order" },
              ],
            },
          ],
        });

        // 8 K線圖
        charts[7] = echarts.init(document.getElementById("chart8"));
        let kData = Array.from({ length: 10 }, () => {
          let base = randomData(100);
          return [
            base,
            base + randomData(20),
            base - randomData(20),
            base + randomData(10),
          ];
        });
        charts[7].setOption({
          title: {
            text: "Candlestick Chart",
            left: "center",
            textStyle: { fontSize: 14 },
          },
          xAxis: { data: Array.from({ length: 10 }, (_, i) => i + 1) },
          yAxis: { scale: true },
          series: [{ type: "candlestick", data: kData }],
        });

        // 9 儀表盤
        charts[8] = echarts.init(document.getElementById("chart9"));
        charts[8].setOption({
          title: {
            text: "Gauge Chart",
            left: "center",
            textStyle: { fontSize: 14 },
          },
          series: [
            {
              type: "gauge",
              progress: { show: true },
              detail: { valueAnimation: true, formatter: "{value}%" },
              data: [{ value: randomData() }],
            },
          ],
        });
      }

      function updateCharts() {
        charts.forEach((chart, idx) => {
          if (!chart) return;
          let option = chart.getOption();

          switch (idx) {
            case 0:
            case 3: // 折線圖 / 面積圖
              let newVal = randomData();
              chart.__data.push(newVal);
              chart.__data.shift();
              option.series[0].data = chart.__data;
              break;
            case 1: // 柱狀圖
              option.series[0].data = option.series[0].data.map((v) => {
                let delta = Math.round((Math.random() - 0.5) * 10);
                return Math.max(0, v + delta);
              });
              break;
            case 2: // 圓餅圖
              option.series[0].data.forEach((d, i) => {
                let delta = Math.round((Math.random() - 0.5) * 10);
                d.value = Math.max(0, d.value + delta);
              });
              break;
            case 4: // 散點圖
              chart.__data.shift();
              chart.__data.push([randomData(), randomData()]);
              option.series[0].data = chart.__data;
              break;
            case 5: // 雷達圖
              option.series[0].data[0].value =
                option.series[0].data[0].value.map(() => randomData());
              break;
            case 6: // 漏斗圖
              option.series[0].data.forEach((d) => (d.value = randomData()));
              break;
            case 7: // K線圖
              option.series[0].data.shift();
              let base = randomData(100);
              option.series[0].data.push([
                base,
                base + randomData(20),
                base - randomData(20),
                base + randomData(10),
              ]);
              break;
            case 8: // 儀表盤
              option.series[0].data[0].value = randomData();
              break;
          }

          chart.setOption(option);
        });
      }

      initCharts();

      let countdownSec = 10;
      const countdownEl = document.getElementById("countdown");

      function tick() {
        countdownEl.textContent = `距離下一次更新還有 ${countdownSec} 秒`;
        countdownSec--;

        if (countdownSec < 0) {
          updateCharts(); // 更新圖表
          countdownSec = 10; // 重置倒數
        }
      }

      setInterval(tick, 1000);

      window.addEventListener("resize", () =>
        charts.forEach((c) => c.resize())
      );
    </script>
  </body>
</html>
