<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>PPS ECharts</title>
    <style>
      body {
        font-family: sans-serif;
        background-color: #f4f4f4;
        padding: 20px;
      }
      #chart {
        width: 100%;
        height: 600px;
      }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js"></script>
  </head>
  <body>
    <h1>Diecasting Eigenvalue Data Chart</h1>
    <div id="chart"></div>

    <script>
            // 從後端傳來的 models
            window.__MODELS__ = <%- JSON.stringify(models) %>;

            (function () {
              function parseDate(dtStr) { return new Date(dtStr); }
              function fmtDateYMDHMS(d) {
                const pad = n => (n < 10 ? "0"+n : ""+n);
                return `${d.getFullYear()}/${pad(d.getMonth()+1)}/${pad(d.getDate())} ${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;
              }
              function buildTimeValuePairs(values, dtStr, hz, id) {
                  const out = new Array(values.length);
                  const start = parseDate(dtStr).getTime();
                  const step = 1000 / (hz || 50);
                  for (let i = 0; i < values.length; i++) {
                  out[i] = {
                      value: [new Date(start + i * step), values[i]],
                      diecastingId: id // 將 id 附加在每個點
                  };
                  }

                  return out;
              }
              const models = Array.isArray(window.__MODELS__) ? window.__MODELS__ : [];
              models.sort((a,b) => Number(a.diecasting_eigenvalue_data_id)-Number(b.diecasting_eigenvalue_data_id));

              const HZ = 50;
              const posData=[], pressData=[], speedData=[];
        for (const m of models) {
        if (Array.isArray(m.position))
          posData.push(...buildTimeValuePairs(m.position, m.dt, HZ, m.diecasting_eigenvalue_data_id));
        if (Array.isArray(m.pressure))
          pressData.push(...buildTimeValuePairs(m.pressure, m.dt, HZ, m.diecasting_eigenvalue_data_id));
        if (Array.isArray(m.speed))
          speedData.push(...buildTimeValuePairs(m.speed, m.dt, HZ, m.diecasting_eigenvalue_data_id));
      }

              const el = document.getElementById("chart");
              const chart = echarts.init(el, null, { renderer: "canvas" });

              const option = {
                animation:false,
                grid:{ left:60, right:24, top:24, bottom:60, containLabel:true },
                xAxis:{
                  type:"time",
                  name:"Time",
                  nameGap:24,
                  nameLocation:"middle",
                  axisLabel:{ formatter: val => fmtDateYMDHMS(new Date(val)) },
                  splitLine:{ show:true }
                },
                yAxis:{
                  type:"value",
                  name:"Value",
                  nameGap:14,
                  nameLocation:"middle",
                  splitLine:{ show:true }
                },
                dataZoom:[
                  { type:"slider", xAxisIndex:0, filterMode:"none", bottom:10, height:24 },
                  { type:"inside", xAxisIndex:0, filterMode:"none", zoomOnMouseWheel:true, moveOnMouseMove:true, moveOnMouseWheel:true }
                ],
                tooltip: {
                    trigger: "axis",
                    axisPointer: { type: "cross" },
                    formatter: function(params) {

                    let timeStr = "";
                    let idStr = "";
                    const lines = params.map(p => {

                        const valObj = p.value.value || p.value;
                        const [time, val] = valObj;
                        timeStr = fmtDateYMDHMS(new Date(time));
                        idStr = p.data.diecastingId || idStr; // 取每個點的 id
                        return `${p.marker} ${p.seriesName}: <b>${val}</b>`; // marker 會顯示線顏色
                    });
                    return `<div>
                        <b>Time: ${timeStr}</b><br/>
                        <b>Id: ${idStr}</b><br/>
                        ${lines.join("<br/>")}
                    </div>`;
                    }
                },
                legend:{ top:0, data:["Position","Pressure","Speed"] },
                toolbox:{ feature:{ restore:{}, saveAsImage:{ pixelRatio:2 } }, right:10 },
                series:[
                  { name:"Position", type:"line", smooth:true, showSymbol:false, large:true, progressive:2000, encode:{x:0,y:1}, data:posData },
                  { name:"Pressure", type:"line", smooth:true, showSymbol:false, large:true, progressive:2000, encode:{x:0,y:1}, data:pressData },
                  { name:"Speed", type:"line", smooth:true, showSymbol:false, large:true, progressive:2000, encode:{x:0,y:1}, data:speedData },
                ]
              };

              chart.setOption(option);
              window.addEventListener("resize", ()=>chart.resize());
            })();
    </script>
  </body>
</html>
