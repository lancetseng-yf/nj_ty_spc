<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Max Pressure vs Max Speed</title>
  <style>
    body {
      font-family: sans-serif;
      background-color: #f4f4f4;
      padding: 20px;
    }
    #chart {
      width: 100%;
      height: 600px;
    }
    #timeSlider {
      width: 90%;
      margin: 20px auto;
    }
    #rangeLabel {
      text-align: center;
      margin-bottom: 10px;
      font-weight: bold;
    }
  </style>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/15.7.0/nouislider.min.css">
  <script src="https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/15.7.0/nouislider.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/wnumb/1.2.0/wNumb.min.js"></script>
</head>
<body>
  <h1>Max Pressure vs Max Speed</h1>
  <div id="chart"></div>
  <div id="rangeLabel"></div>
  <div id="timeSlider"></div>

  <script>
    const models = <%- JSON.stringify(models) %>;

    // 建立 scatterData [time(ms), speed, pressure, id]
    const scatterData = models.map(m => [
      new Date(m.dt).getTime(),
      Number(m.max_speed),
      Number(m.max_pressure),
      m.diecasting_eigenvalue_data_id
    ]);

    const chart = echarts.init(document.getElementById("chart"));

    // 固定 XY 軸
    const speedValues = scatterData.map(d => d[1]);
    const pressureValues = scatterData.map(d => d[2]);
    const xMin = Math.min(...speedValues);
    const xMax = Math.max(...speedValues);
    const yMin = Math.min(...pressureValues);
    const yMax = Math.max(...pressureValues);

    const optionBase = {
      title: { text: "Scatter: Max Speed vs Max Pressure", left: "center" },
      tooltip: {
        trigger: "item",
        formatter: function(p) {
          const [time, speed, pressure, id] = p.value;
          const d = new Date(time);
          const pad = n => (n < 10 ? "0"+n : n);
          const timeStr = `${d.getFullYear()}/${pad(d.getMonth()+1)}/${pad(d.getDate())} ${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;
          return `<b>ID:</b> ${id}<br/><b>Time:</b> ${timeStr}<br/><b>Speed:</b> ${speed}<br/><b>Pressure:</b> ${pressure}`;
        }
      },
      xAxis: { type: "value", name: "Max Speed", min: xMin, max: xMax, nameLocation: "middle", nameGap: 30 },
      yAxis: { type: "value", name: "Max Pressure", min: yMin, max: yMax, nameLocation: "middle", nameGap: 40 },
      series: [{ type: "scatter", symbolSize: 10, data: scatterData }]
    };

    chart.setOption(optionBase);

    // 下方滑軌
    const times = scatterData.map(d => d[0]);
    const minTime = Math.min(...times);
    const maxTime = Math.max(...times);

    const slider = document.getElementById('timeSlider');
    noUiSlider.create(slider, {
      start: [minTime, maxTime],
      connect: true,
      range: { min: minTime, max: maxTime },
      step: 1000,
      format: wNumb({ decimals: 0 })
    });

    const rangeLabel = document.getElementById('rangeLabel');

    function formatTimeLabel(ms) {
      const d = new Date(+ms);
      const pad = n => (n < 10 ? "0"+n : n);
      return `${d.getFullYear()}/${pad(d.getMonth()+1)}/${pad(d.getDate())} ${pad(d.getHours())}:${pad(d.getMinutes())}`;
    }

    // 滑動滑軌時更新 ECharts 數據
    slider.noUiSlider.on('update', (values) => {
      const start = Number(values[0]);
      const end = Number(values[1]);
      rangeLabel.textContent = `Time: ${formatTimeLabel(start)} ~ ${formatTimeLabel(end)}`;
      const filtered = scatterData.filter(d => d[0] >= start && d[0] <= end);
      chart.setOption({
        series: [{
          type: "scatter",
          symbolSize: 10,
          data: filtered,
          encode: { x: 1, y: 2, tooltip: [0,1,2,3] }
        }]
      });
    });

    window.addEventListener("resize", () => chart.resize());
  </script>
</body>
</html>
